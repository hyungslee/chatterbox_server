{"version":3,"sources":["component/Room.js","component/Post/Postdetail.js","component/Post.js","component/Index.js","component/Login.js","component/Signup.js","App.js","index.js"],"names":["Room","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","roomname","target","value","makeNewroom","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","post","state","then","res","currentroom","data","console","log","catch","err","stop","react_default","createElement","className","type","placeholder","onChange","onClick","Component","Postdetail","id","username","text","jsx","Post","componentDidMount","get","texts","defineProperty","name","writeNewtext","roomid","userid","dataCome","renderfunc","localStorage","getItem","map","Postdetail_Postdetail","reverse","Index","isLogind","Loginout","link","clickLogoutButton","history","push","appname","Link","to","Room_Room","Post_Post","Login","clickLoginButton","key","check","requestLogin","password","_handleKeyPress","charCode","onKeyPress","moveSignupPage","Signup","isCorrect_Password","pw","repw","clickSignupButton","repassword","requestSignup","App","changeUsername","newID","_this2","BrowserRouter","react","Route","exact","path","component","Index_Index","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.64fd216d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Room extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomname: \"고 홈 좌니!!\",\n      currentroom: \"Home\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      roomname: e.target.value\n    });\n  };\n\n  makeNewroom = async () => {\n    await axios\n      .post(\"rooms/room\", {\n        roomname: this.state.roomname\n      })\n      .then(\n        res =>\n          this.setState({\n            currentroom: res.data\n          }),\n        console.log(\"[+] 룸생성완료\")\n      )\n      .catch(err => console.log(err, \"[-] 응답없음\"));\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h2>Roomname {this.state.currentroom}</h2>\n        </div>\n        <div>\n          <input\n            className=\"room-input\"\n            type=\"text\"\n            placeholder=\"roomname\"\n            onChange={this.handleChange}\n          />\n          <button className=\"room-button\" onClick={this.makeNewroom}>\n            클릭!\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Postdetail extends Component {\n  render() {\n    return (\n      <div id=\"postdetail\">\n        <div className=\"post_container\">\n          <div className=\"post_inform\">{this.props.username}</div>\n          <div className=\"post_inform\">{this.props.text}</div>\n        </div>\n\n        <style jsx>{`\n          #postdetail {\n          }\n          .post_container {\n            display: flex;\n            text-align: center;\n            max-width: 100%;\n            justify-content: center;\n          }\n          .post_inform {\n            flex: 1;\n            width: 100%;\n            height: 50px;\n            font-size: 15px;\n          }\n\n          @media screen and (max-width: 600px) {\n            #postdetail {\n              width: 100%;\n            }\n            .post_container {\n              height: 600px;\n            }\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Postdetail from \"./Post/Postdetail\";\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: localStorage.getItem(\"user\") || \"로그인 해줭!\",\n      text: null,\n      roomid: 1,\n      userid: 1,\n      texts: []\n    };\n  }\n\n  componentDidMount = () => {\n    axios\n      .get(\"posts/post\")\n      .then(res => {\n        console.log(\"[+] 정보 송신 완료\");\n        const texts = res.data;\n        this.setState({ texts: texts });\n      })\n      .catch(err => console.log(err, \"[-] 응답없음\"));\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  writeNewtext = () => {\n    axios\n      .post(\"posts/post\", {\n        username: this.state.username,\n        text: this.state.text,\n        roomid: this.state.roomid,\n        userid: this.state.userid\n      })\n      .then(res => {\n        if (res.data) {\n          this.dataCome();\n          console.log(\"[+] 정보 전송 완료\");\n        } else {\n          console.log(\"[-] 전송 실패\");\n        }\n      })\n      .catch(err => console.log(err, \"[-] 응답없음\"));\n  };\n\n  dataCome = () => {\n    axios\n      .get(\"posts/post\")\n      .then(res => {\n        console.log(\"[+] 정보 송신 완료\");\n        const texts = res.data;\n        this.setState({ texts: texts });\n      })\n      .catch(err => console.log(err, \"[-] 응답없음\"));\n  };\n\n  renderfunc = () => {};\n\n  render() {\n    return (\n      <div>\n        <input\n          className=\"post-text-input\"\n          placeholder=\"text\"\n          name=\"text\"\n          onChange={this.handleChange}\n        />\n        <button className=\"post-button\" onClick={this.writeNewtext}>\n          제출!\n        </button>\n        <div>\n          {this.state.texts\n            .map(text => {\n              return (\n                <div>\n                  <Postdetail username={text.username} text={text.text} />\n                </div>\n              );\n            })\n            .reverse()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Room from \"../component/Room\";\nimport Post from \"../component/Post\";\nimport { Link } from \"react-router-dom\";\n\n// const username = localStorage.getItem(\"user\");\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appname: \"GO HOME JOHNNY!!\",\n      username: this.props.username,\n      isLogind: false,\n      Loginout: \"로그인해라!!\",\n      link: \"/login\"\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.state.username === \"fake\") {\n      this.setState({\n        isLogind: false,\n        Loginout: \"로그인해라!!\",\n        link: \"/login\"\n      });\n    } else {\n      this.setState({\n        isLogind: true,\n        Loginout: \"로그아웃해라!!\",\n        link: \"/\"\n      });\n    }\n  };\n\n  clickLogoutButton = () => {\n    if (this.state.isLogind) {\n      this.setState({\n        isLogind: false,\n        Loginout: \"로그인해라!!\",\n        link: \"/login\"\n      });\n      this.props.history.push(\"/\");\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"index\">\n        <div className=\"index_container\">\n          <div className=\"index_inform\">\n            <h1>{this.state.appname}</h1>\n          </div>\n\n          <div className=\"index_inform\">\n            <h2>{this.state.username}</h2>\n          </div>\n\n          <Link to={this.state.link}>\n            <button className=\"index-btn\" onClick={this.clickLogoutButton}>\n              {this.state.Loginout}\n            </button>\n          </Link>\n          <div />\n          <Room />\n          <Post />\n        </div>\n\n        <style jsx>{`\n          #index {\n            background-color: rgba(0, 0, 0, 0.03);\n          }\n          .index_container {\n            text-align: center;\n            max-width: 100%;\n            height: 100%;\n            justify-content: center;\n          }\n          .index_inform {\n            width: 100%;\n            height: 50px;\n            font-size: 15px;\n          }\n          .index-btn {\n            width: 300px;\n            font-size: 18px;\n            font-weight: 500;\n            height: 50px;\n            color: whitesmoke;\n            border: none;\n            background-color: #ff8906;\n            outline-style: none;\n          }\n          .index-btn:hover {\n            cursor: pointer;\n            background-color: #ff7f00;\n          }\n          @media screen and (max-width: 600px) {\n            #login {\n              width: 100%;\n            }\n            .index_container {\n              height: 600px;\n            }\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      password: null,\n      check: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  clickLoginButton = () => {\n    for (let key in this.state) {\n      if (this.state[key] === null) {\n        this.setState({\n          check: \"빈칸을 모두 채워 주세요!\"\n        });\n        return;\n      }\n    }\n    this.requestLogin();\n  };\n\n  //   checkRegisteredEmail = () => {\n  //     const data = {\n  //       email: this.state.email\n  //     };\n  //     axios\n  //       .get(`${BACKEND_ENDPOINT}/users/email`, {\n  //         params: {\n  //           email: data.email\n  //         }\n  //       })\n  //       .then(res => {\n  //         if (res.data) {\n  //           this.setState({\n  //             check: \"가입되지 않은 이메일 입니다!\"\n  //           });\n  //         }\n  //         this.requestLogin();\n  //       })\n  //       .catch(err => console.log(err));\n  //   };\n\n  requestLogin = () => {\n    const data = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    axios\n      .post(\"/users/login\", data)\n      .then(res => {\n        if (res.data) {\n          // this.props.changeUsername(this.state.username);\n          this.props.history.push(\"/\");\n        } else {\n          this.setState({\n            check: \"비밀번호를 확인해 주세요!\"\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  _handleKeyPress = e => {\n    if (e.charCode === 13) {\n      this.clickLoginButton();\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div className=\"login_container\">\n          <div className=\"login_box\">\n            <div className=\"login-text\">로그인</div>\n            <div className=\"login-inputbox\">\n              <div className=\"login-input\">\n                <input\n                  className=\"input-box\"\n                  type=\"text\"\n                  placeholder=\"ID\"\n                  name=\"username\"\n                  onChange={this.handleChange}\n                  onKeyPress={this._handleKeyPress}\n                />\n              </div>\n\n              <div className=\"login-input\">\n                <input\n                  className=\"input-box\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  onKeyPress={this._handleKeyPress}\n                />\n              </div>\n\n              <div className=\"wanning-div\">{this.state.check}</div>\n\n              <button className=\"login-btn\" onClick={this.clickLoginButton}>\n                로그인\n              </button>\n\n              <div className=\"login-a-div\">Johnny를 집으로 보내자!!</div>\n              <Link to=\"/signup\">\n                <div className=\"login-b-div\" onClick={this.moveSignupPage}>\n                  내 동료가 되라!\n                </div>\n              </Link>\n            </div>\n          </div>\n        </div>\n\n        <style jsx>{`\n          #login {\n            background-color: rgba(0, 0, 0, 0.03);\n          }\n          .login_container {\n            max-width: 1140px;\n            height: 800px;\n            margin: 0 auto;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n          .login_box {\n            border: 1px solid #ddd;\n            width: 370px;\n            background-color: white;\n          }\n          .login-text {\n            font-size: 35px;\n            text-align: left;\n            margin: 35px 20px;\n          }\n          .login-inputbox {\n            text-align: center;\n            margin: 0px 20px;\n          }\n          .login-input {\n            margin-top: 5px;\n            margin-bottom: 5px;\n          }\n          .input-box {\n            width: 100%;\n            height: 40px;\n            font-size: 15px;\n            padding: 5px 0px 5px 5px;\n            border: 1px solid #ddd;\n          }\n          .wanning-div {\n            color: red;\n            font-size: 11px;\n            height: 20px;\n          }\n          .login-btn {\n            font-size: 18px;\n            font-weight: 500;\n            width: 100%;\n            height: 50px;\n            padding: 10px;\n            color: whitesmoke;\n            border: none;\n            background-color: #ff8906;\n            outline-style: none;\n          }\n          .login-btn:hover {\n            cursor: pointer;\n            background-color: #ff7f00;\n          }\n          .login-a-div {\n            margin-top: 10px;\n          }\n          .login-b-div {\n            margin-bottom: 20px;\n            font-size: 15px;\n            font-weight: 500;\n            color: #246db7;\n          }\n          .login-b-div:hover {\n            cursor: pointer;\n            color: #ff8906;\n          }\n          @media screen and (max-width: 600px) {\n            #login {\n              width: 100%;\n            }\n            .login_container {\n              height: 600px;\n            }\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      password: null,\n      repassword: null,\n      check: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  isCorrect_Password = (pw, repw) => {\n    if (pw !== repw) {\n      this.setState({\n        check: \"비밀번호를 확인해 주세요!\"\n      });\n      return false;\n    }\n    return true;\n  };\n\n  clickSignupButton = () => {\n    for (let key in this.state) {\n      if (this.state[key] === null) {\n        this.setState({\n          check: \"빈칸을 모두 채워 주세요!\"\n        });\n        return;\n      }\n    }\n    if (!this.isCorrect_Password(this.state.password, this.state.repassword)) {\n      return;\n    }\n    this.requestSignup();\n  };\n\n  requestSignup = () => {\n    const data = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    axios\n      .post(\"/users/signup\", data)\n      .then(res => {\n        if (res.data) {\n          this.props.history.push(\"/login\");\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  _handleKeyPress = e => {\n    if (e.charCode === 13) {\n      this.clickSignupButton();\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"signup\">\n        <div className=\"signup_container\">\n          <div className=\"signup_box\">\n            <div className=\"signup-text\">회원가입</div>\n            <div className=\"signup-inputbox\">\n              <div className=\"signup-input\">\n                <input\n                  className=\"input-box\"\n                  type=\"text\"\n                  placeholder=\"ID\"\n                  name=\"username\"\n                  onChange={this.handleChange}\n                  onKeyPress={this._handleKeyPress}\n                />\n              </div>\n\n              <div className=\"signup-input\">\n                <input\n                  className=\"input-box\"\n                  placeholder=\"비밀번호를 입력해주세요.(8~16자)\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  onKeyPress={this._handleKeyPress}\n                />\n              </div>\n              <div className=\"signup-input\">\n                <input\n                  className=\"input-box\"\n                  placeholder=\"비밀번호를 다시 입력해주세요.\"\n                  type=\"password\"\n                  name=\"repassword\"\n                  onChange={this.handleChange}\n                  onKeyPress={this._handleKeyPress}\n                />\n              </div>\n\n              <div className=\"wanning-div\">{this.state.check}</div>\n              <button className=\"signup-btn\" onClick={this.clickSignupButton}>\n                회원가입\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <style jsx>{`\n          #signup {\n            background-color: rgba(0, 0, 0, 0.03);\n          }\n          .signup_container {\n            max-width: 1140px;\n            height: 800px;\n            margin: 0 auto;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n          .signup_box {\n            border: 1px solid #ddd;\n            width: 370px;\n            background-color: white;\n          }\n          .signup-text {\n            font-size: 35px;\n            text-align: left;\n            margin: 35px 20px;\n          }\n          .signup-inputbox {\n            text-align: center;\n            margin: 0px 20px;\n          }\n          .signup-input {\n            margin-bottom: 10px;\n          }\n          .input-box {\n            width: 100%;\n            height: 40px;\n            font-size: 15px;\n            padding: 5px 0px 5px 5px;\n            border: 1px solid #ddd;\n          }\n          .wanning-div {\n            color: red;\n            font-size: 11px;\n            height: 20px;\n          }\n          .signup-btn {\n            font-size: 18px;\n            width: 100%;\n            height: 50px;\n            padding: 10px;\n            color: whitesmoke;\n            margin-bottom: 20px;\n            border: none;\n            background-color: #ff8906;\n          }\n          .signup-btn:hover {\n            cursor: pointer;\n            background-color: #ff7f00;\n          }\n          @media screen and (max-width: 600px) {\n            #signup {\n              width: 100%;\n            }\n            .signup_container {\n              height: 600px;\n            }\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Index from \"./component/Index\";\nimport Login from \"./component/Login\";\nimport Signup from \"./component/Signup\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"fake\"\n    };\n  }\n\n  changeUsername = newID => {\n    this.setState({\n      username: newID\n    });\n  };\n\n  render() {\n    console.log(this.state.username);\n    return (\n      <Router>\n        <Fragment>\n          <Route\n            exact\n            path=\"/\"\n            component={() => <Index username={this.state.username} />}\n          />\n          <Route\n            path=\"/login\"\n            component={Login}\n            // component={history => (\n            //   <Login\n            //     username={this.state.username}\n            //     changeUsername={this.changeUsername}\n            //     history={history}\n            //   />\n            // )}\n          />\n          <Route path=\"/signup\" component={Signup} />\n        </Fragment>\n      </Router>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}